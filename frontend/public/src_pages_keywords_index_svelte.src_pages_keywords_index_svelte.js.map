{"version":3,"sources":["webpack://svelte-app/keyword_input.svelte","webpack://svelte-app/keyword_input_form.svelte","webpack://svelte-app/index.svelte","webpack://svelte-app/./src/components/keyword_input_form/components/keyword_input_data.js"],"names":[],"mappings":"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","file":"src_pages_keywords_index_svelte.src_pages_keywords_index_svelte.js","sourcesContent":["<script>\n\t/* import createForm from '@spaceavocado/svelte-form'; */\n\t/* import TextInput from '../input/text.svelte'; */\n\timport KeywordInputData from './keyword_input_data.js';\n\n\t/* class Name { */\n\t\t/* constructor(name, input_type, hover_text, value, readonly) { */\n\t\t\t/* this.name = name; */\n\t\t\t/* this.input_type = input_type; */\n\t\t\t/* this.hover_text = hover_text; */\n\t\t\t/* this.value = value; */\n\t\t\t/* this.readonly */\n\t\t/* } */\n\t/* } */\n\n\texport let data;\n\texport let all_keywords;\n\n\t$: related_text = data.related.map((i, n) => {\n\t\t\treturn `${i.name}:${i.value}`;\n\t\t}).join(', ');\n\n\tlet errMessage = '';\n\n\tconst save = () => {\n\t\tif (data.show_details){\n\t\t\tconst valid = data.valid(all_keywords);\n\t\t\tif (valid.valid){\n\t\t\t\tdata.show_details = false;\n\t\t\t\terrMessage = '';\n\t\t\t}\n\t\t\telse{\n\t\t\t\terrMessage = valid.message;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tdata.show_details = true;\n\t\t\terrMessage = '';\n\t\t}\n\t}\n</script>\n\n<style src=\"./keyword_input.scss\"></style>\n\n<div class='keyword-main'>\n\t<div class='name'>\n\t\t<input type=\"text\" bind:value={data.name}/>\n\t</div>\n\t<div class='section related-section'>\n\t\t<h1 class='mini-title'>related</h1>\n\t\t<div class='content' class:show_details={data.show_details}>\n\t\t\t{#if data.show_details}\n\t\t\t\t{#each data.related as related}\n\t\t\t\t\t<div class=\"item related\" class:show_details={data.show_details}>\n\t\t\t\t\t\t<input type=\"text\" bind:value={related.name} readonly={!data.show_details}>\n\t\t\t\t\t\t<input type=number class='number_input' bind:value={related.value}>\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\t\t\t{:else}\n\t\t\t\t<div>{related_text}</div>\n\t\t\t{/if}\n\t\t\t{#if data.show_details}\n\t\t\t\t<button on:click={() => {data.related = [...data.related, {'name': '', 'value': null}]}}>add related keyword</button>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n\t<div class='section alias-section'>\n\t\t<h1 class='mini-title'>aliases</h1>\n\t\t<div class='content' class:show_details={data.show_details}>\n\t\t\t{#each data.aliases as alias, i}\n\t\t\t\t<div class='item alias' class:show_details={data.show_details}>\n\t\t\t\t\t<input type=\"text\" bind:value={alias} readonly={!data.show_details}>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t\t{#if data.show_details}\n\t\t\t\t<button on:click={() => {data.aliases = [...data.aliases, \"\"]}}>add alias</button>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n\t<button on:click={save}>{data.show_details?\"save\":\"show/edit details\"}</button>\n</div>\n{#if errMessage}\n\t<h2 style=\"color: red\">{errMessage}</h2>\n{/if}\n\n","<script>\n\t/* import createForm from '@spaceavocado/svelte-form'; */\n\t/* import TextInput from './input/text.svelte'; */\n\timport KeywordInput from './keyword_input.svelte';\n\timport KeywordInputData from './keyword_input_data.js';\n\n\tlet keywords = [];\n\tlet dummyInvisibleFileInput; // for hacky json file download\n\n\tconst attachFile = () => {\n\t\tdummyInvisibleFileInput.click();\n\t}\n\tconst import_append_mappings_json = async () => {\n\t\tconst mappings_text = await dummyInvisibleFileInput.files[fileInput.files.length - 1].text();\n\t\tlet parsed_keywords = JSON.parse(mappings_text);\n\t\tlet keywordInputData = new KeywordInputData(parsed_keywords.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparsed_keywords.aliases,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparsed_keywords.related,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparsed_keywords.category);\n\t\tkeywords.push(keywordInputData);\n\t}\n\n\tconst clear_all = () => {\n\t\tkeywords = [];\n\t}\n\n\tconst add_keyword_input = () => {\n\t\tkeywords.push(KeywordInputData.NewInst());\n\t\tkeywords = [...keywords];\n\t}\n</script>\n<style src=\"./keyword_input_form.scss\"/>\n\n<h1>keyword mappings create/edit</h1>\n\n<div class='top_buttons'>\n\t<button on:click={import_append_mappings_json}>import and append mappings json</button>\n\t<!-- <button on:click={clear_all}>clear all mappings</button> -->\n\t<button>export mappings json</button>\n</div>\n<div class='keywords'>\n\t{#each Object.values(keywords).sort((a,b) => a.name < b.name || !b.name) as data}\n\t\t<KeywordInput {data} all_keywords={keywords}/>\n\t{/each}\n\t<button on:click={add_keyword_input}>add keyword input</button>\n</div>\n","<script>\n  import KeywordInputForm from '../../components/keyword_input_form/components/keyword_input_form.svelte';\n</script>\n\n<style>\n\th1, figure, p {\n\t\ttext-align: center;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tfont-size: 2.8em;\n\t\ttext-transform: uppercase;\n\t\tfont-weight: 700;\n\t\tmargin: 0 0 0.5em 0;\n\t}\n\n\tfigure {\n\t\tmargin: 0 0 1em 0;\n\t}\n\n\timg {\n\t\twidth: 100%;\n\t\tmax-width: 400px;\n\t\tmargin: 0 0 1em 0;\n\t}\n\n\tp {\n\t\tmargin: 1em auto;\n\t}\n\n\t@media (min-width: 480px) {\n\t\th1 {\n\t\t\tfont-size: 4em;\n\t\t}\n\t}\n</style>\n\n<title>keyword input form</title>\n\n<KeywordInputForm/>\n","export default class KeywordInputData {\n  constructor(name, aliases, related, category, show_details){\n    this.name = name;\n    this.aliases = aliases;\n    this.related = related;\n    this.category = category;\n    this.show_details = show_details;\n  }\n  static NewInst(){\n    return new KeywordInputData('', [], [], false, true);\n  }\n\n  toJSON() {\n    return JSON.stringify({name: this.name, aliases: this.aliases, related: this.related, category:this.category});\n  }\n\n  valid(all_keywords) {\n    if (!this.name) {\n      return {valid: false, message: 'missing keyword name'};\n    }\n    if (all_keywords.filter((i) => i.name === this.name).length > 1){\n      return {valid: false, message: `keyword ${this.name} already exists`};\n    }\n    let invalid = [];\n    this.related.forEach(i => {\n      // TODO: check against master list of tags\n      let found = false;\n      let foundAlias = false;\n      all_keywords.forEach(j => {\n        if (j.name == this.name){\n          found = true;\n        }\n      });\n      if (!found){\n        invalid.push(i.name);\n      }\n    });\n    return {valid: invalid.length===0, message: `invalid params: ${JSON.stringify(invalid)}`};\n  }\n}\n"],"sourceRoot":""}